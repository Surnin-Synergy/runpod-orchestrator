version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  orchestrator-1:
    build: .
    environment:
      - REDIS_URL=redis://redis:6379
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
      - RUNPOD_ENDPOINT_ID=${RUNPOD_ENDPOINT_ID}
      - NUM_INSTANCES=3
    depends_on:
      redis:
        condition: service_healthy
    command: npm run example:multi-instance

  orchestrator-2:
    build: .
    environment:
      - REDIS_URL=redis://redis:6379
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
      - RUNPOD_ENDPOINT_ID=${RUNPOD_ENDPOINT_ID}
      - NUM_INSTANCES=3
    depends_on:
      redis:
        condition: service_healthy
    command: npm run example:multi-instance

  orchestrator-3:
    build: .
    environment:
      - REDIS_URL=redis://redis:6379
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
      - RUNPOD_ENDPOINT_ID=${RUNPOD_ENDPOINT_ID}
      - NUM_INSTANCES=3
    depends_on:
      redis:
        condition: service_healthy
    command: npm run example:multi-instance

volumes:
  redis_data:
